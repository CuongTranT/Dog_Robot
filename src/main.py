import math
import time
from Adafruit_PCA9685 import PCA9685

# ==============================
# ‚öôÔ∏è C·∫§U H√åNH PCA9685
# ==============================
pwm = PCA9685(busnum=1)
pwm.set_pwm_freq(60)  # MG996R ho·∫°t ƒë·ªông t·ªët ·ªü 60Hz

# ==============================
# üìê Chuy·ªÉn g√≥c sang gi√° tr·ªã PWM (12-bit)
# ==============================
def angle_to_pwm(angle_deg):
    pulse_min = 500    # us (0¬∞)
    pulse_max = 2500   # us (180¬∞)
    pulse_us = pulse_min + (pulse_max - pulse_min) * angle_deg / 180
    pulse_len = 1000000.0 / 60 / 4096  # tick time @60Hz
    pwm_val = int(pulse_us / pulse_len)
    return pwm_val

# ==============================
# üö¶ ƒêi·ªÅu khi·ªÉn servo
# ==============================
def set_servo_angle(channel, angle_deg):
    angle_deg = max(0, min(180, angle_deg))
    pwm_val = angle_to_pwm(angle_deg)
    pwm.set_pwm(channel, 0, pwm_val)

# ==============================
# ü§ñ H·ªá IK 2 b·∫≠c: t√≠nh Œ±1 v√† Œ±2 (chu·∫©n theo h√¨nh h·ªçc)
# ==============================
def inverse_kinematics(x, y, L1=10.0, L2=10.0):
    D = math.hypot(x, y)
    if D > (L1 + L2):
        raise ValueError("ƒêi·ªÉm ngo√†i t·∫ßm v·ªõi")

    # alpha2: g√≥c gi·ªØa L1 v√† L2
    cos_alpha2 = (L1**2 + L2**2 - D**2) / (2 * L1 * L2)
    alpha2 = math.acos(cos_alpha2)  # rad

    # gamma: g√≥c trong tam gi√°c gi·ªØa L1 v√† D
    cos_gamma = (L1**2 + D**2 - L2**2) / (2 * L1 * D)
    gamma = math.acos(cos_gamma)

    # alpha1: g√≥c gi·ªØa L1 v√† tr·ª•c Y (theo chi·ªÅu ng∆∞·ª£c kim ƒë·ªìng h·ªì)
    alpha1 = math.pi - gamma

    return math.degrees(alpha1), math.degrees(alpha2)

# ==============================
# ü¶ø ƒêi·ªÅu khi·ªÉn servo tr·ª±c ti·∫øp t·ª´ IK
# ==============================
def move_leg(x, y):
    alpha1_deg, alpha2_deg = inverse_kinematics(x, y)

    print(f"‚Üí Œ±1 = {alpha1_deg:.2f}¬∞, Œ±2 = {alpha2_deg:.2f}¬∞")

    # Ph·∫£i (channel 0-3)
    set_servo_angle(0, 180 - alpha1_deg)  # hip ph·∫£i tr∆∞·ªõc
    set_servo_angle(1, 90 - alpha2_deg)  # knee ph·∫£i tr∆∞·ªõc
    set_servo_angle(2, alpha1_deg)  # hip ph·∫£i sau
    set_servo_angle(3, alpha2_deg)  # knee ph·∫£i sau

    # Tr√°i (channel 4-5 n·∫øu c·∫ßn)
    # set_servo_angle(4, 180 - alpha1_deg)
    # set_servo_angle(5, 180 - alpha2_deg)

# ==============================
# üß™ Test
# ==============================
if __name__ == "__main__":
    try:
        while True:
            move_leg(x=0.0, y=-14.0)  # v√≠ d·ª• ƒëi·ªÉm H nh∆∞ h√¨nh
            time.sleep(2)
    except KeyboardInterrupt:
        print("\n‚õî K·∫øt th√∫c")
